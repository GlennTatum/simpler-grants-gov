# Local environment variables
# Used by docker compose and it can be loaded
# by calling load_local_env_vars() from api/src/util/local.py

ENVIRONMENT=local
PORT=8080

PERSIST_AUTHORIZATION_OPENAPI=TRUE

# Python path needs to be specified
# for pytest to find the implementation code
PYTHONPATH=/api/

# PY_RUN_APPROACH=python OR docker
# Set this in your environment
# to modify how the Makefile runs
# commands that can run in or out
# of the Docker container - defaults to outside

FLASK_APP=src.app:create_app

############################
# Logging
############################

# Can be "human-readable" OR "json"
LOG_FORMAT=human-readable

# Set log level. Valid values are DEBUG, INFO, WARNING, CRITICAL
# LOG_LEVEL=INFO

# Enable/disable audit logging. Valid values are TRUE, FALSE
LOG_ENABLE_AUDIT=FALSE

# Change the message length for the human readable formatter
# LOG_HUMAN_READABLE_FORMATTER__MESSAGE_WIDTH=50

LOG_LEVEL_OVERRIDES=smart_open.s3=ERROR

############################
# Authentication
############################
# The auth token used by the local endpoints
API_AUTH_TOKEN=LOCAL_AUTH_12345678,LOCAL_AUTH_87654321,LOCAL_1234

LOGIN_GOV_CLIENT_ID=local_mock_client_id

LOGIN_GOV_JWK_ENDPOINT=http://mock-oauth2-server:5001/issuer1/jwks
LOGIN_GOV_AUTH_ENDPOINT=http://localhost:5001/issuer1/authorize
LOGIN_GOV_TOKEN_ENDPOINT=http://mock-oauth2-server:5001/issuer1/token
LOGIN_GOV_ENDPOINT=http://mock-oauth2-server:5001/issuer1

# LOGIN_FINAL_DESTINATION=http://localhost:8080/v1/users/login/result
LOGIN_FINAL_DESTINATION=http://localhost:3000/api/auth/callback

FRONTEND_BASE_URL=http://localhost:8080

# These should be set in your override.env file
# which can be created by running `make setup-env-override-file`
# override.env
#
# Any environment variables written to this file
# will take precedence over those defined in local.env
#
# This file will not be checked into github and it is safe
# to store secrets here, however you should still follow caution
# with using any secrets locally if they cause the app to interact
# with external systems.
#
# This file was generated by running:
#    make setup-env-override-file
#
# Which runs as part of our "make init" flow.
#
# If you would like to re-generate this file, please run:
#    make setup-env-override-file args="--recreate"
#
# Note that this will completely erase any existing configuration you may have

############################
# Authentication
############################

API_JWT_PRIVATE_KEY="-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAw1MALWX6vrnh1xZ5k5BXFoLJiFtz4nDeYD7wEMHewRjXAOhK
csE1RL1uMv97MFGox6Y6d8eAylT5AdQ8kzmKIZNuJRwAEtsOIjCcfym4duavHpPF
GSxhb+DPSZy6pnFpRJQ88Eh0iKe8omVBUsY9/ZCumMpQfZ4kO3wA2Z9fUSDDXQ0b
jbMsrL8JPQ/qNFJju8XijdZDWo3RJkfHQpXtyGaeHFE4X8VH/g4l3EBpBGqCuCus
yMi/J1ME++acPn6PGP8qCaioLmvCBpuug7a7whRSmAAGoJlj/crgbuwFjQtBHlnD
oYNJ2Qvk2HSpiEFhtE56MYgFv2ePsfz1W2etjwIDAQABAoIBAFZWM19d0vKIRo/k
4tN7u0r7f6qSxgwDGQCRAVte3qAa4zqG8xV7WpjqZLINJL4scj7htrloSYDmA3Uw
A6COEAUcXlTv5gZvpnUtaJd68Qs5l5Gb/sTMTbt+sxGWQhi9S6shHTiWxk/7WNGt
kSzN7OvOjqaB0wdbpidW/iczn5XDcE9D6+0uMudRzkg2Kt5aD/ysBhbr7nMz9upC
B3dx69ict+56tZxK5DTP3Ia3R87EAAmyKx8FD/RREkkq65Bj+3V1Re9Wsjrt3TQs
jsC8T6Romdwsu4OvyPDAAJKFKTuKOgOTILPZaT/r+jB1LKeUDhhrxmuO3qSTJTNl
nnOIEE0CgYEA6MhsKZT7Z4TTUOZYqYPROoj7X6Ritk9yFUAiHE7yczI0sCb/deHM
to+CuAszCuBhOJaSxDWpDWGi4ZtYS6EbJTjfL/XwE/WNJ6FomVBKy9BNhAvzbS+V
hL//rG0jSN2TdBMhxBFK1QNoo5cizmdX5DwVaO1XNcI5Mb41JoGlyn0CgYEA1s4o
HxtIjIt2AyU12n7/zbtBOTAs2IQkp3GBcKGFIR+HW7N8StUHzaxQ43KcZboiFqTh
dX/n3aC4zDfjyT55/5LR0BqU+S50PxSRFsn5zBpxc1PDrXwjdHvD2Qcnsv+C2fPJ
I0UslS88Zd5BkEnjZBOAky7tBCalph3JBSG2yfsCgYEAlYscIWJ6V7h24MP6NXxf
T5Fsm7bJS4GiMpCu2SzGiMa6HmgPOTXEA4wSWBWpxtT64BWrV615WwVcVD8t6/gl
rjXo+7CteMUI12rT/ZodUu4QvkHHMl+dWFjX8XdzcX4XGjyoNoM9Zbb45A9V5u9x
AUiwIGZI3lpVz+T31DL5xSkCgYBZvBHCvPEX1YLdWYQf3QIb/egHbfquELYHRUGf
vboR1kwDoP2BfXEfGKdJ/S0cyh9HemW9YkuIqIXKumZsQa9RdxIzb4dgeWmSmJLs
BEBYZYuTdCDArqVZGgL8/SI2gss1JcSW+WTghbUjkS+uiU93FTaXRfk5zLNSrAq4
HBdyVQKBgFwLG/MHnNopOWGYtMhLiS/3kn7I2N42/mO5JfBBeJwYmuBztdgZ0oTv
ffYoFPyqLdWgtsdMNuFLh9tj4tmVHSgaWJz3kiAMBABlMt6dWnAhmjPB0PFT3lMi
nvafju6pD4C6/u9A4IB9AMAeTiCkJwTqf0niQ7dDEaMzIjBIPP9D
-----END RSA PRIVATE KEY-----"

API_JWT_PUBLIC_KEY="-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAw1MALWX6vrnh1xZ5k5BX
FoLJiFtz4nDeYD7wEMHewRjXAOhKcsE1RL1uMv97MFGox6Y6d8eAylT5AdQ8kzmK
IZNuJRwAEtsOIjCcfym4duavHpPFGSxhb+DPSZy6pnFpRJQ88Eh0iKe8omVBUsY9
/ZCumMpQfZ4kO3wA2Z9fUSDDXQ0bjbMsrL8JPQ/qNFJju8XijdZDWo3RJkfHQpXt
yGaeHFE4X8VH/g4l3EBpBGqCuCusyMi/J1ME++acPn6PGP8qCaioLmvCBpuug7a7
whRSmAAGoJlj/crgbuwFjQtBHlnDoYNJ2Qvk2HSpiEFhtE56MYgFv2ePsfz1W2et
jwIDAQAB
-----END PUBLIC KEY-----"

# The local mock doesn't check the key used
# for token auth so just re-use the other private key
LOGIN_GOV_CLIENT_ASSERTION_PRIVATE_KEY="-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAw1MALWX6vrnh1xZ5k5BXFoLJiFtz4nDeYD7wEMHewRjXAOhK
csE1RL1uMv97MFGox6Y6d8eAylT5AdQ8kzmKIZNuJRwAEtsOIjCcfym4duavHpPF
GSxhb+DPSZy6pnFpRJQ88Eh0iKe8omVBUsY9/ZCumMpQfZ4kO3wA2Z9fUSDDXQ0b
jbMsrL8JPQ/qNFJju8XijdZDWo3RJkfHQpXtyGaeHFE4X8VH/g4l3EBpBGqCuCus
yMi/J1ME++acPn6PGP8qCaioLmvCBpuug7a7whRSmAAGoJlj/crgbuwFjQtBHlnD
oYNJ2Qvk2HSpiEFhtE56MYgFv2ePsfz1W2etjwIDAQABAoIBAFZWM19d0vKIRo/k
4tN7u0r7f6qSxgwDGQCRAVte3qAa4zqG8xV7WpjqZLINJL4scj7htrloSYDmA3Uw
A6COEAUcXlTv5gZvpnUtaJd68Qs5l5Gb/sTMTbt+sxGWQhi9S6shHTiWxk/7WNGt
kSzN7OvOjqaB0wdbpidW/iczn5XDcE9D6+0uMudRzkg2Kt5aD/ysBhbr7nMz9upC
B3dx69ict+56tZxK5DTP3Ia3R87EAAmyKx8FD/RREkkq65Bj+3V1Re9Wsjrt3TQs
jsC8T6Romdwsu4OvyPDAAJKFKTuKOgOTILPZaT/r+jB1LKeUDhhrxmuO3qSTJTNl
nnOIEE0CgYEA6MhsKZT7Z4TTUOZYqYPROoj7X6Ritk9yFUAiHE7yczI0sCb/deHM
to+CuAszCuBhOJaSxDWpDWGi4ZtYS6EbJTjfL/XwE/WNJ6FomVBKy9BNhAvzbS+V
hL//rG0jSN2TdBMhxBFK1QNoo5cizmdX5DwVaO1XNcI5Mb41JoGlyn0CgYEA1s4o
HxtIjIt2AyU12n7/zbtBOTAs2IQkp3GBcKGFIR+HW7N8StUHzaxQ43KcZboiFqTh
dX/n3aC4zDfjyT55/5LR0BqU+S50PxSRFsn5zBpxc1PDrXwjdHvD2Qcnsv+C2fPJ
I0UslS88Zd5BkEnjZBOAky7tBCalph3JBSG2yfsCgYEAlYscIWJ6V7h24MP6NXxf
T5Fsm7bJS4GiMpCu2SzGiMa6HmgPOTXEA4wSWBWpxtT64BWrV615WwVcVD8t6/gl
rjXo+7CteMUI12rT/ZodUu4QvkHHMl+dWFjX8XdzcX4XGjyoNoM9Zbb45A9V5u9x
AUiwIGZI3lpVz+T31DL5xSkCgYBZvBHCvPEX1YLdWYQf3QIb/egHbfquELYHRUGf
vboR1kwDoP2BfXEfGKdJ/S0cyh9HemW9YkuIqIXKumZsQa9RdxIzb4dgeWmSmJLs
BEBYZYuTdCDArqVZGgL8/SI2gss1JcSW+WTghbUjkS+uiU93FTaXRfk5zLNSrAq4
HBdyVQKBgFwLG/MHnNopOWGYtMhLiS/3kn7I2N42/mO5JfBBeJwYmuBztdgZ0oTv
ffYoFPyqLdWgtsdMNuFLh9tj4tmVHSgaWJz3kiAMBABlMt6dWnAhmjPB0PFT3lMi
nvafju6pD4C6/u9A4IB9AMAeTiCkJwTqf0niQ7dDEaMzIjBIPP9D
-----END RSA PRIVATE KEY-----"


ENABLE_AUTH_ENDPOINT=TRUE
ENABLE_APPLY_ENDPOINTS=TRUE

############################
# DB Environment Variables
############################

# These are used by the Postgres image to create the admin user
POSTGRES_USER=app
POSTGRES_PASSWORD=secret123

# Set DB_HOST to localhost if accessing a non-dockerized database
DB_HOST=grants-db
DB_NAME=app
DB_USER=app
DB_PASSWORD=secret123
DB_SSL_MODE=allow

# When an error occurs with a SQL query,
# whether or not to hide the parameters which
# could contain sensitive information.
HIDE_SQL_PARAMETER_LOGS=TRUE

############################
# Opensearch Environment Variables
############################

SEARCH_ENDPOINT=opensearch-node
SEARCH_PORT=9200
SEARCH_USE_SSL=FALSE
SEARCH_VERIFY_CERTS=FALSE

############################
# Localstack
############################

# If you want to connect to localstack outside of docker
# use localhost:4566 instead
S3_ENDPOINT_URL=http://localstack:4566

############################
# S3
############################

# Our terraform sets these as s3 paths, so include s3:// on the bucket name
PUBLIC_FILES_BUCKET=s3://local-mock-public-bucket
DRAFT_FILES_BUCKET=s3://local-mock-draft-bucket

# This env var is used to set local AWS credentials
IS_LOCAL_AWS=1

############################
# Feature Flags
############################

FEATURE_AUTH_ON=TRUE
FEATURE_SAVED_OPPORTUNITIES=TRUE
FEATURE_SAVED_SEARCHES_ON=TRUE

ENABLE_OPPORTUNITY_LOG_MSG=false
ENABLE_OPPORTUNITY_ATTACHMENT_PIPELINE=true

############################
# Endpoint Configuration
############################
# Nothing needs to be configured at the moment

############################
# Script Configuration
############################

# For the script to setup the foreign data tables
# this env var overrides it so the script generates normal
# tables that don't need to connect to an Oracle database
IS_LOCAL_FOREIGN_TABLE=true

############################
# Task Configuration
############################

# File path for the export_opportunity_data task
PUBLIC_FILES_OPPORTUNITY_DATA_EXTRACTS_PATH=/tmp

# File path for the create-analytics-db-csvs task
API_ANALYTICS_DB_EXTRACTS_PATH=/tmp

############################
# Deploy Metadata
############################

# These params are set/updated when we deploy the API
# and are used to add metadata info in various places
# For local development, just define static values

DEPLOY_GITHUB_REF=main
DEPLOY_GITHUB_SHA=ffaca647223e0b6e54344122eefa73401f5ec131
DEPLOY_TIMESTAMP=2024-12-02T21:25:18Z
DEPLOY_WHOAMI=local-developer

CDN_URL=http://localhost:4566/local-mock-public-bucket

############################
# SOAP Proxy Configuration
############################
GRANTS_GOV_URI=http://mock-applicants-soap-api:8080
ENABLE_SOAP_API=1
INJECT_UUID_SOAP_RESPONSE=1 # inject uuid and other response info to simulate live SOAP response.

###############################
# Domain verification content
###############################
DOMAIN_VERIFICATION_CONTENT={"dv.txt": "data\non\nnewlines"}
